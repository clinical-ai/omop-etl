scripts:
  - |
    CREATE OR REPLACE FUNCTION total_rows ()
    RETURNS integer AS $total$
    declare
      total integer;
    BEGIN
      SELECT count(*) into total FROM foo;
      RETURN total;
    END;
    $total$ LANGUAGE plpgsql;

pre_init:
  - alias: temp_table_1
    query: select * from (VALUES (0::int, 1::numeric), (1::int, 2::numeric), (2::int, 3::numeric), (3::int, 4::numeric), (4::int, 5::numeric)) as t (id, beta)

post_init:
  - alias: temp_table_2
    query: select mapping.baz.id, temp_table_1.beta from mapping.baz, temp_table_1 where mapping.baz.id = temp_table_1.id

variables:
  foo_table: &foo_table
    alias: foo
    query: select x.id, alpha, beta, total_rows() as total from (values (0, 'a1'), (2, 'b1'), (4, 'c1')) x(id, alpha), temp_table_1 where x.id = temp_table_1.id

name: baz
primary_key:
  name: id
  constraints:
    - id in (select id from temp_table_1)
  sources:
    foo:
      name: foo
      table: *foo_table
      columns:
        id: integer

columns:
  - name: alpha
    tables: [*foo_table]
    expression: foo.alpha
    primary_key: foo

  - name: beta
    tables: [*foo_table]
    expression: foo.beta
    primary_key: foo

  - name: disabled
    enabled: false
